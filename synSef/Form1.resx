<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAEAIABoBAAANgAAABgYAAABACAAiAkAAJ4EAAAgIAAAAQAgAKgQAAAmDgAAKAAAABAA
        AAAgAAAAAQAgAAAAAAAABAAAEgsAABILAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADi7P0SdKL4E1OM
        9g9UjfYCXZP3A1aP9gtVjvYLUov2DE6J9gtOifYIZZj3EWyd9w18qfkAibH5AAAAAAAAAAAAhq75oU+K
        9qtHhPWjSIX1ZE2I9ihHhfWMSIX1nEeF9Z1HhPWUSob1WEqG9aNMh/aCVY72CFeP9gAAAAAAAAAAAEeF
        9YpGg/W5SIX1i0eE9bhIhfVoR4T1fEeE9b1IhfWJRoT1sUmG9WlHhPWTR4T1q06J9hpMiPYAAAAAAAAA
        AABLh/YnS4f2bEqG9YhHhfW7SIX1kkyI9kpHhPW5SYX1lkiF9YRPivYmSob1WUeF9bpIhfWDSob2NjV4
        9AC60fwAUIv2DkmG9Y5IhfW7SYX1qEuH9WhSjPYgSIX1oUmF9bJNiPZnTIj2H0uH9TFIhfWvSYb1pk2I
        9lFKhvUYSob1A1+U9wZJhvV8SIX1sEqH9YNIhfWqTIj1SEmG9XtIhfWvS4f1ekeF9axLh/VgSYX1l0mF
        9aFKhvWHSIX1n06J9iNDgfUATIf2JEuH9X9JhvWlSob1l1CK9jxLh/VOSYb1mEqG9ZVKhvWWTIj1bEuH
        9W5IhfWPSYX1jUmG9YpPifY6yNr9ADx99ABakfYJUYv2HVWO9hN6pvkBV4/2B1iQ9hJckvYRXZP2EF+V
        9w1VjvYJS4f1DE6J9gxTjPYMWpH2BwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAA//8AAP//AAD//wAAAAcAAAAH
        AAAABwAAAAMAAAAAAAAAAAAAgAAAAMAAAAD//wAA//8AAP//AAD//wAAKAAAABgAAAAwAAAAAQAgAAAA
        AAAACQAAEgsAABILAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOTt/laSt/laUoz2Wk6J9lZMiPUzT4r2CqC/
        +wFQivYtTYn2Qk2I9kJMiPZCS4f1Q0mG9UVLh/YqS4f1J1SN9lBelPZcWpH2NAtc8AB3pPgAAAAAAAAA
        AAAAAAAAAAAAAI60+bVTjfbGR4X1xUeE9cVGhPW1Sof2c1WO9hZIhfVtRoT1wEeE9b5HhPW+R4T1v0eE
        9cFJhfWKTIj2WUeE9cJIhfXISIX1jGia+AdlmPcAAAAAAAAAAAAAAAAAAAAAAESD9XpFg/W/RoT1vEaE
        9ZlGhPWyRoP1w0eE9XZOiPYvRYP1rkaE9b9HhPWoRoT1l0aE9b9GhPWwT4r2PUWD9ZdGhPXAR4T1pVSN
        9hZUjfYAAAAAAAAAAAAAAAAAAAAAAEyI9jxFg/WnRoP1qVGL9khKh/V8R4T1wUaE9bJTjfYtSIX1fUeE
        9cJHhPWkVI32OkeE9ZVGhPWjTYj2REuH9VJHhPW/R4T1tE+K9jNOifYEaJz3AWWZ9wAAAAAAAAAAAGGW
        9wVelPcaUYv2XkmG9ZpHhPW1SIX1vkeE9b9PifZBTYj2R0eE9b1IhfW8SIX1qkeF9aNVjvYtgKv4BFKM
        9iRHhfWvSIX1vkeE9a1GhPWgT4r2K0eE9QD///8AAAAAAEaE9QBLh/Y/R4X1s0iF9b1IhfW/R4T1uEmG
        9YVakfYVU432HUiF9ahIhfW9SYb1skqH9pJPivY1TYn2AGea9whJhvWKSIX1v0mG9bdLh/aTUIr2Pi90
        9ACPtPkAAAAAAEeE9QBOifZASIX1t0iF9bpMh/aHTYj1e0uH9YVKhvVZYpf3DkqG9X5IhfW8SYb1olmR
        9jRIhfVrRoT1dUqH9TpNiPZVSIX1ukiF9a9UjfY+SYX1YEaE9XVKhvU0MXX0AFKL9gBVjvYZSIX1mkiF
        9bpKhvWISYb1hkiF9btIhfWsU4z2JEuH9VpIhfW5SIX1sEyI9XdJhvWrSIX1vkqG9X9QivZGSIX1tEiF
        9bZLh/WBSob1pEiF9b9Kh/V2gKr4A32o+AAAGu4ASIX1RkqG9Z9HhfW2SIX1ukiF9bVKhvWjU4z2NE2I
        9j5HhPWwSIX1s0eE9bZHhPWyR4T1skeE9Z1Ri/ZQR4T1p0iF9a9IhfWySIX1r0iF9a9IhfWUXJL2GAAA
        AADC1/wAAADfAF2T9htQi/ZZS4f1c1CK9l9YkPYj////AViQ9g9Qi/VJUoz1TVOM9ktTjfZJVI32SFSN
        9kZhlfcfT4n2OEmG9T5Kh/Y8TIj2PE6J9jtQivY4XpT2EgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8A////AP//
        /wD///8A////AP///wAAAD8AAAAfAAAAHwAAAAcAAAAHAIACBwCAAAEAgAAAAMAAAADgAAAA////AP//
        /wD///8A////AP///wD///8A////ACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///8H////B+nx/geBq/kHh6/5B8HW/QK90/wAAAAAALTM/AC0zPwAtMz8ALTM
        /AD///8A////AP///wD///8A////ANro/wFxovkAdaT5AeHr/APb5/0Hzd78B8HW/QPC1/0AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOTt/qycvfq4YJX2t0iF9bhJhvW3SIX1mUeE9VtQivYWQH/1AFSN
        9i9HhPWRSIX1lUiF9ZZIhfWXR4X1l0eE9ZhGhPWZRYP1lFSN9i1HhPVnSob1p1OM9rdQi/a5UYv2WiBr
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////////////////////////////////////A5wA/wCA
        AP8AAAB/AAAAfwAAAH8AAAAPwAAwD4AgGA+AAAABgBAAAcAAAAHAAAAA4AAAAPAwAAD/////////////
        //////////////////////////////////8=
</value>
  </data>
</root>